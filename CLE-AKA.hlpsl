%%CLE-based AKA

role role_A(A:agent,B:agent,Sks:text,Ka:public_key,Kb:public_key,SND,RCV:channel(dy))
played_by A
def=
	local
		State:nat,
                Na:text,
                Nb:text,
           
                Skr:text,
                H: hash_func
	init
		State := 0
	transition
		1. State=0 /\ RCV(start) =|> 
                   State':=1 /\ Na':=new() /\ SND({A.B.Na'.Sks}_Kb)

		2. State=1 /\ RCV({A.B.Nb'.Skr'}_Ka.H(Sks',Na)) =|> 
                   State':=2 /\ SND(H(Skr'.Nb'))
                   
                   %% A checks that he receives the same nonce 
                   %% that he sent at step 1.
                   /\ secret(Sks,sec_2,{A,B}) 
                   /\ request(A,B,auth_1,Na)
                   /\ witness(A,B,auth_2,Nb')
end role

role role_B(B:agent,A:agent,Skr:text,Ka:public_key,Kb:public_key,SND,RCV:channel(dy))
played_by B
def=
	local
		State:nat,
                Nb:text,
                Na:text,
                Sks:text,
                
                H: hash_func
	init
		State := 0
	transition
		1. State=0 /\ RCV({A.B.Na'.Sks'}_Kb) =|> 
                   
                   State':=1 /\ Nb':=new() /\ SND({A.B.Nb'.Skr}_Ka.H(Sks'.Na'))

                   /\ secret(Skr,sec_1,{A,B}) 
                   %% B hopes that Na will permit to authenticate him
                   /\ witness(B,A,auth_1,Na')
                2. State=1 /\ RCV(H(Skr'.Nb)) =|> 
                   State':=2 /\ request(B,A,auth_2,Nb)
end role

role session(A:agent,B:agent,Ka:public_key,Kb:public_key,Skr:text,Sks:text)
def=
	local
		SND2,RCV2,SND1,RCV1:channel(dy)
	composition
		role_B(B,A,Skr,Ka,Kb,SND2,RCV2) /\ role_A(A,B,Sks,Ka,Kb,SND1,RCV1)
end role

role environment()
def=
	const
		ka,kb:public_key,
                alice,bob:agent,
                skr,sks:text,
                sec_1, sec_2, auth_1, auth_2:protocol_id
	intruder_knowledge = {alice,bob,ka,kb}
	composition
		session(alice,bob,ka,kb,skr,sks) /\ session(alice,bob,ka,kb,skr,sks)
end role

goal
	secrecy_of sec_1
        secrecy_of sec_2
        authentication_on auth_1
        authentication_on auth_2
end goal

environment()
